import numpy as np
import matplotlib.pyplot as plt


def Punto (A, b):
    At = np.transpose(A)
    AtA = np.dot(At, A)
    Atb = np.dot(At, b)
    x = np.linalg.solve(AtA, Atb)
    return x

A = np.array([[2,-1], [1,2], [1,1]])
b= np.array([2,1,4])

x= Punto(A, b)

x_= np.linspace(0,10, 100)

y1_= 2*x_ -2
plt.plot(x_, y1_)

y2_ = (1 - x_)/2
plt.plot(x_, y2_)

y3_ = 4 - x_
plt.plot(x_, y3_)

plt.scatter(x[0], x[1])

# El punto representa la menor distancia existente entre las tres líneas. 
# Sería una especie de solución para un sistema que no tiene solución.

X = np.linspace(-5, 5, 1000)
Y = np.linspace(-5, 5, 1000)
X, Y = np.meshgrid(X, Y)

V = np.array([X, Y])
D= np.array([])

for x1 in X:
    for y1 in Y:
        v= np.array([x1, y1])
        p= np.dot(A, v)

for i in range(p.shape[1]):
    p1 = p[:, i] - b
    d = np.linalg.norm(p1)
    np.append(D, d)
            
ax = plt.subplots(subplot_kw={"projection": "3d"})
surf = ax.plot_surface(X, Y, D)
plt.show()
