
import numpy as np


A = np.array([[3,-1,-1],[-1.,3.,1.],[2,1,4]])
b = np.array([1.,3.,7.])


def SOR(A,b,x0,w, itmax=20, tolerancia= 1e-9):
    
    x = x0.copy()
    
    for it in range(itmax):
        
        xn = np.zeros_like(x0)
        
        for i in range(A.shape[0]):
            
            sum1 = 0.
            sum2 = 0.
            
            for j in range(i-1):
                
                sum1 += A[i,j] * xn[j]
            
            for k in range(i+1, A.shape[0]):
                
                sum2 += A[i,k] * x[k]
                
            p1 = (1 - w) * x[i]
                          
            xn[i] = p1 + ( w * (b[i] - sum1 - sum2)/A[i,i])
            
        print(it,xn)
        
        residuo = np.linalg.norm( np.dot(A,xn) - b )
        x = xn.copy()
        #print(residuo)
        
        if np.allclose(residuo,tolerancia,atol=tolerancia):
            break
        
    return x


x0 = np.array([0.,0.,0.])
SOR(A,b,x0,1)
